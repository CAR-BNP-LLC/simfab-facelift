version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: simfab-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: simfab_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Backend Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: simfab-server
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/simfab_dev
      NODE_ENV: development
      SESSION_SECRET: docker-dev-secret-key
      PORT: 3001
      FRONTEND_URL: http://localhost:5173
      API_URL: http://localhost:3001
      # PayPal Configuration (Sandbox for development)
      PAYPAL_CLIENT_ID: ${PAYPAL_CLIENT_ID:-your_sandbox_client_id_here}
      PAYPAL_CLIENT_SECRET: ${PAYPAL_CLIENT_SECRET:-your_sandbox_client_secret_here}
      PAYPAL_MODE: sandbox
      PAYPAL_WEBHOOK_ID: ${PAYPAL_WEBHOOK_ID:-your_sandbox_webhook_id_here}
      # Production PayPal (for when you're ready)
      PAYPAL_CLIENT_ID_PROD: ${PAYPAL_CLIENT_ID_PROD:-}
      PAYPAL_CLIENT_SECRET_PROD: ${PAYPAL_CLIENT_SECRET_PROD:-}
      PAYPAL_MODE_PROD: live
      # ShipStation Custom Store Configuration
      SHIPSTATION_USERNAME: ${SHIPSTATION_USERNAME:-your_shipstation_username}
      SHIPSTATION_PASSWORD: ${SHIPSTATION_PASSWORD:-your_shipstation_password}
      SHIPSTATION_ENABLED: ${SHIPSTATION_ENABLED:-true}
      # FedEx API Configuration
      FEDEX_API_KEY: ${FEDEX_API_KEY:-}
      FEDEX_API_SECRET: ${FEDEX_API_SECRET:-}
      FEDEX_ACCOUNT_NUMBER: ${FEDEX_ACCOUNT_NUMBER:-}
      FEDEX_METER_NUMBER: ${FEDEX_METER_NUMBER:-}
      FEDEX_ENVIRONMENT: ${FEDEX_ENVIRONMENT:-sandbox}
      FEDEX_SHIP_FROM_ADDRESS: ${FEDEX_SHIP_FROM_ADDRESS:-{"streetLines":["123 Business St"],"city":"Miami","stateOrProvinceCode":"FL","postalCode":"33101","countryCode":"US"}}
      # Email Service SMTP Configuration
      # IMPORTANT: Set SMTP credentials in .env file for production emails
      # When SMTP credentials are provided, emails work automatically
      SMTP_HOST: ${SMTP_HOST:-}
      SMTP_PORT: ${SMTP_PORT:-465}
      SMTP_USER: ${SMTP_USER:-}
      SMTP_PASS: ${SMTP_PASS:-}
      EMAIL_TEST_MODE: ${EMAIL_TEST_MODE:-}
      EMAIL_ENABLED: ${EMAIL_ENABLED:-true}
      EMAIL_FROM_EMAIL: ${EMAIL_FROM_EMAIL:-contact.esaconsult@gmail.com}
      EMAIL_FROM_NAME: ${EMAIL_FROM_NAME:-SimFab}
    ports:
      - "3001:3001"
    volumes:
      - ./server/src:/app/src
      - ./server/uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    command: sh -c "npm run migrate:up && npm run dev"

  # Frontend with Hot Reload
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: simfab-frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:3001
      CHOKIDAR_USEPOLLING: true # Enable file watching in Docker
      # Region Configuration
      VITE_DEFAULT_REGION: ${VITE_DEFAULT_REGION:-us}
      # PayPal Frontend Configuration
      VITE_PAYPAL_CLIENT_ID: ${VITE_PAYPAL_CLIENT_ID:-your_sandbox_client_id_here}
      VITE_PAYPAL_CLIENT_ID_PROD: ${VITE_PAYPAL_CLIENT_ID_PROD:-}
    ports:
      - "5173:5173"
    volumes:
      - ./src:/app/src
      - ./public:/app/public
      - ./index.html:/app/index.html
      - ./package.json:/app/package.json
      - ./tsconfig.json:/app/tsconfig.json
      - ./tsconfig.app.json:/app/tsconfig.app.json
      - ./tsconfig.node.json:/app/tsconfig.node.json
      - ./vite.config.ts:/app/vite.config.ts
      - ./tailwind.config.ts:/app/tailwind.config.ts
      - ./postcss.config.js:/app/postcss.config.js
      - ./components.json:/app/components.json
    command: npm run dev -- --host 0.0.0.0

volumes:
  postgres_data:

